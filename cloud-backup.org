#+TITLE: Rackspace cloud backup using Heat

*** Brief summary

Rackspace cloud backup configuration resource enables you to select and
backup specific files/folders from a cloud server using Cloud Orchestration.

**** Prerequisite(s):
Cloud backup agent is installed on the server from where you wanted to backup files/folders

***** Installing cloud backup agent on the server
****** Option-1
If the tenant is a managed operations customer and also server from where you wanted to create backup
was created as part of Heat stack, then pass '{build_config: backup_agent_only}' as metadata to
OS::Nova::Server or Rackspace::Cloud::WinServer. For example,

#+BEGIN_SRC yaml
  wordpress_server:
    type: "Rackspace::Cloud::WinServer"
    properties:
      name: worpress-server
      flavor: 4GB Standard Instance
      image: Windows Server 2012
      metadata: {build_config: backup_agent_only}
#+END_SRC

****** Option-2
If the tenant is not a managed operations customer or server was not created
as part of the Heat stack creation, then follow links given below to install backup agent.

- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-linux][Install cloud backup agent on Linux server]]
- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-windows][Install cloud backup agent on Windows server]]
- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-windows-by-using-silent-installation][Install cloud backup agent on Windows server (silent installation)]]

**** Example template
In the following example template, we will set up a single node wordpress
web application (on a Windows server) with cloud backup resource.  For the sake of simplicity,
we will not use template parameters in this example.

Start by adding the top-level template sections:

#+BEGIN_SRC yaml
heat_template_version: 2014-10-16

description: |
  Wordpress application on a Windows server with cloud backup enabled.

resources:

outputs:

#+END_SRC

**** Resources section

Add a Rackspace::Cloud::WinServer resource that will create a windows server
and install wordpress web application.

#+BEGIN_SRC yaml
  wordpress_server:
    type: "Rackspace::Cloud::WinServer"
    properties:
      name: worpress-server
      flavor: 4GB Standard Instance
      image: Windows Server 2012
      metadata: {build_config: backup_agent_only}
      user_data:
        str_replace:
          template: |
            $source = "http://download.microsoft.com/download/7/0/4/704CEB4C-9F42-4962-A2B0-5C84B0682C7A/WebPlatformInstaller_amd64_en-US.msi"
            $destination = "webpi.msi"
            $wc = New-Object System.Net.WebClient
            $wc.DownloadFile($source, $destination)
            Start-Process msiexec -ArgumentList "/i webpi.msi /qn"  -NoNewWindow -Wait
            echo DBPassword[@]%dbpassword% DBAdminPassword[@]%dbadminpassword% > test.app
            $tmpprofile = $env:userprofile
            $env:userprofile = "c:\users\administrator"
            $wpicmd = "C:\Program Files\Microsoft\Web Platform Installer\WebPICMD.exe"
            Start-Process $wpicmd -ArgumentList "/Install /Application:Wordpress@test.app /MySQLPassword:%dbadminpassword% /AcceptEULA /Log:.\wpi.log"  -NoNewWindow -Wait
            $env:userprofile = $tmpprofile
          params:
            "%dbpassword%": testpassword_123
            "%dbadminpassword%": testpassword_123
#+END_SRC

Above resource creates a Windows server and installs wordpress application. Please note that
'{build_config: backup_agent_only}' was passed as metadata to install cloud backup agent.

**** cloud backup config resource
Add a Rackspace::Cloud::BackupConfig resource to backup wordpress application
installed at c:\inetpub\wwwroot\wordpress folder.

#+BEGIN_SRC yaml
  rax_backup_config:
    properties:
      BackupConfigurationName: wordpress-daily-backup
      DayOfWeekId: null
      Frequency: Daily
      StartTimeHour: 11
      StartTimeMinute: 30
      StartTimeAmPm: PM
      HourInterval: 1
      IsActive: true
      Enabled: true
      NotifyFailure: true
      NotifyRecipients: your_email@emailprovider.com
      NotifySuccess: false
      TimeZoneId: Eastern Standard Time
      VersionRetention: 60
      host_ip_address: { get_attr: [wordpress_server, accessIPv4] }
      Inclusions:
      - {"FilePath": "c:\\inetpub\\wwwroot\\wordpress", "FileItemType": "Folder" }
    type: Rackspace::Cloud::BackupConfig
#+END_SRC

In the above backup resource, cloud backup service was configured to create a backup of 'c:\inetpub\wwwroot\wordpress'
folder 'Daily' at '11:30PM' and created backup will be retailed for '60' days. And also, it was
configured to notify at given email ID if there was any error during the backup creation.
Please note that, host_ip_address is IP of the cloud server from where files/folders will be backed up.
Here IP address of the windows server that was created in the earlier resource example was passed.
If the server was created out side of the stack, make sure that backup agent was installed on that server
and pass the IP address to 'host_ip_address'.

**** Outputs section
Add wordpress website URL to the outputs section.

#+BEGIN_SRC yaml
  website_url:
    value:
      str_replace:
        template: http://%ip%/wordpress
        params:
          "%ip%": { get_attr: [ wordpress_server, accessIPv4 ] }
    description: URL for Wordpress site
#+END_SRC

**** Full Example Template
#+BEGIN_SRC yaml
heat_template_version: 2013-05-23

description: |
  HEAT template for installing Wordpress on Windows Server

resources:

  rax_backup_config:
    properties:
      BackupConfigurationName: wordpressbackup
      DayOfWeekId: null
      Frequency: Daily
      StartTimeHour: 7
      StartTimeMinute: 30
      StartTimeAmPm: PM
      HourInterval: null
      IsActive: true
      Enabled: true
      NotifyFailure: true
      NotifyRecipients: vijendar.komalla@rackspace.com
      NotifySuccess: true
      TimeZoneId: Eastern Standard Time
      VersionRetention: 60
      host_ip_address: { get_attr: [rs_windows_server, accessIPv4] }
      Inclusions:
      - {"FilePath": "c:\\inetpub\\wwwroot\\wordpress", "FileItemType": "Folder" }
    type: Rackspace::Cloud::BackupConfig

  rs_windows_server:
    type: "Rackspace::Cloud::WinServer"
    properties:
      name: worpress-server
      flavor: 4GB Standard Instance
      image: Windows Server 2012
      metadata: {build_config: backup_agent_only}
      user_data:
        str_replace:
          template: |
            $source = "http://download.microsoft.com/download/7/0/4/704CEB4C-9F42-4962-A2B0-5C84B0682C7A/WebPlatformInstaller_amd64_en-US.msi"
            $destination = "webpi.msi"
            $wc = New-Object System.Net.WebClient
            $wc.DownloadFile($source, $destination)
            Start-Process msiexec -ArgumentList "/i webpi.msi /qn"  -NoNewWindow -Wait
            echo DBPassword[@]%dbpassword% DBAdminPassword[@]%dbadminpassword% > test.app
            $tmpprofile = $env:userprofile
            $env:userprofile = "c:\users\administrator"
            $wpicmd = "C:\Program Files\Microsoft\Web Platform Installer\WebPICMD.exe"
            Start-Process $wpicmd -ArgumentList "/Install /Application:Wordpress@test.app /MySQLPassword:%dbadminpassword% /AcceptEULA /Log:.\wpi.log"  -NoNewWindow -Wait
            $env:userprofile = $tmpprofile
          params:
            "%dbpassword%": testpassword_123
            "%dbadminpassword%": testpassword_123

outputs:
  website_url:
    value:
      str_replace:
        template: http://%ip%/wordpress
        params:
          "%ip%": { get_attr: [ rs_windows_server, accessIPv4 ] }
    description: URL for Wordpress site
#+END_SRC

**** Reference

- [[http://docs.rackspace.com/orchestration/api/v1/orchestration-devguide/content/overview.html][Cloud Orchestration API Developer Guide]]
- [[http://docs.openstack.org/developer/heat/template_guide/hot_spec.html][Heat Orchestration Template (HOT) Specification]]
- [[http://cloudinit.readthedocs.org/en/latest/topics/format.html][Cloud-init format documentation]]
- [[http://docs.rackspace.com/rcbu/api/v1.0/rcbu-getting-started/content/Overview-d1e01.html][Cloud backup getting started guide]]
- [[http://docs.rackspace.com/rcbu/api/v1.0/rcbu-devguide/content/overview.html][Cloud backup API developer guide]]
- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-linux][Install cloud backup agent on Linux server]]
- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-windows][Install cloud backup agent on Windows server]]
- [[http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-on-windows-by-using-silent-installation][Install cloud backup agent on Windows server (silent installation)]]
